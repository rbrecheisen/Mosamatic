services:

  db:
    image: postgres:16-alpine
    container_name: mosamatic_postgres
    environment:
      - POSTGRES_DB=db
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=foobar
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root -d db"]
      interval: 30s
      timeout: 10s
      retries: 5
    expose:
      - 5432
    ports:
      - 5432:5432  # Required for running Django outside Docker but using PostgreSQL
    volumes:
      - mosamatic_postgres_data:/var/lib/postgresql/data

  # nginx:
  #   build: ./nginx
  #   image: brecheisen/mosamatic-nginx-intel:${VERSION}
  #   platform: linux/amd64
  #   container_name: mosamatic_nginx
  #   ports:
  #     - 8000:8000
  #   volumes:
  #     - mosamatic_data:/data
  #   depends_on:
  #     - web

  web:
    build: .
    image: brecheisen/mosamatic-web-intel:${VERSION}
    platform: linux/amd64
    container_name: mosamatic_web
    environment:
      - DATA_DIR=/data
      - VERSION=${VERSION}
      - POSTGRES_DB=db
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=foobar
      - POSTGRES_HOST=mosamatic_postgres # When you run Django in Docker set the host
      - POSTGRES_PORT=5432
      - DOCKER=1
      - ADMIN_USER=admin
      - ADMIN_PASSWORD=admin
      - SECRET_KEY=f9sd7f97sdf89as7fd98as7d9f7sad9f
    ports:
      - 8001:8001
    volumes:
      - mosamatic_data:/data
      # Specify these host directories if you want to use pipelines in Docker
      # - D:\\Mosamatic\\DjangoTemplate\\ExamplePipeline\\input:/pipeline_data/input
      # - D:\\Mosamatic\\TensorFlowModelFiles:/pipeline_data/TensorFlowModelFiles
    depends_on:
      db:
        condition: service_healthy

volumes:
  mosamatic_data:
  mosamatic_postgres_data:

networks:
  default:
    name: mosamatic_network